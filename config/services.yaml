# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    route.requirements.id: '[0-9]+'
    route.requirements.provider: '[a-z\-\_0-9]+'
    route.requirements.slug: '[a-z\-\_0-9]+'
    route.requirements.type: '[a-z\-\_0-9]+'
    route.requirements.uuid: '([a-fA-F0-9]{8}-(?:[a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}){1}'

services:
    _defaults:
        autowire: true
        autoconfigure: true

    #
    # Custom monolog line formatters
    #

    monolog.formatter.default:
        class: Monolog\Formatter\LineFormatter
        arguments:
            $format:                     "%%channel%%.%%level_name%%: %%message%% %%context%%\n"
            $allowInlineLineBreaks:      true
            $ignoreEmptyContextAndExtra: true

    monolog.formatter.syslog:
        class: Monolog\Formatter\LineFormatter
        arguments:
            $format:                     "[%%extra.request_id%%] %%channel%%.%%level_name%%: %%message%% %%context%%\n"
            $allowInlineLineBreaks:      true
            $ignoreEmptyContextAndExtra: true

    #
    # Auth Component Services
    #

    App\Auth\Delivery\App\Controllers\:
        resource: '../src/Auth/Delivery/App/Controllers'
        tags: ['controller.service_arguments']

    App\Auth\Delivery\Console\:
        resource: '../src/Auth/Delivery/Console'
        tags: ['console.command']

    App\Auth\Domain\Services\:
        resource: '../src/Auth/Domain/Services'
        public: true

    App\Auth\Application\CommandHandlers\:
        resource: '../src/Auth/Application/CommandHandlers'
        tags: [{ name: messenger.message_handler, bus: command.bus }]

    App\Auth\Infrastructure\Services\:
        resource: '../src/Auth/Infrastructure/Services'


    #
    # Component Services - duplicate for each new component
    #
    # Consider moving into separate files for each component
    #

    app.component.controllers:
        namespace: App\Component\Delivery\App\
        resource: '../src/Component/Delivery/App/*/Controllers'
        tags: ['controller.service_arguments']

    app.component.forms:
        namespace: App\Component\Delivery\App\
        resource: '../src/Component/Delivery/App/*/Forms'
        tags: ['form.type']

    App\Component\Delivery\Console\:
        resource: '../src/Component/Delivery/Console'
        tags: ['console.command']

    App\Component\Domain\Services\:
        resource: '../src/Component/Domain/Services'
        public: true

    App\Component\Application\CommandHandlers\:
        resource: '../src/Component/Application/CommandHandlers/*'
        tags: [{ name: messenger.message_handler, bus: command.bus }]

    App\Component\Application\QueryHandlers\:
        resource: '../src/Component/Application/QueryHandlers/*'
        tags: [{ name: messenger.message_handler, bus: query.bus }]

when@test:
    services:
        _defaults:
            public: true
        #
        # Example overridden SF ApiClient to record API responses
        #
        #    app.some_service.recording_api_client:
        #        decorates: app.some_service.api_client
        #        class: Somnambulist\ApiClient\Client\Decorators\RecordResponseDecorator
        #        arguments:
        #            $client: '@app.some_service.recording_api_client.inner'
        #            $mode: '%env(APP_TEST_API_PLAYBACK_MODE)%'
